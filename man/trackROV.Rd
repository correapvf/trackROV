% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/track.R
\name{trackROV}
\alias{trackROV}
\alias{create_track}
\alias{write_track}
\alias{get_coords}
\alias{plot.track}
\alias{copy_track}
\title{Create ROV track object}
\usage{
create_track(coords, crs = NA)

write_track(x, filename, digits = 2, ...)

get_coords(x, data.table = FALSE)

\method{plot}{track}(x, select = NA, ...)

copy_track(x)
}
\arguments{
\item{coords}{A data.frame with the ROV data. See \code{\link{simcoords}} for more details.}

\item{crs}{A object with coordinate reference system. Check \code{\link[sf]{st_crs}} for options.}

\item{x}{'track' object}

\item{filename}{Output file name.}

\item{digits}{Number of digits to round data}

\item{...}{further arguments passed to \code{\link[data.table]{fwrite}} or \code{\link[plotly]{plot_ly}}.}

\item{data.table}{logical. TRUE returns a data.table. FALSE returns a data.frame.}

\item{select}{character, indicating which Dive to plot. Default to plot first dive.}
}
\description{
Create a track object from a data.frame. 
Preferably, coordinates should be in a projected coordinate system (e.g. UTM).
}
\details{
Use \code{create_track} to create a 'track' object and apply filters.
Following functions can also be used:
\itemize{
  \item \code{write_track} - Save coordinates in file.
  \item \code{get_coords} - Get coordinates from a 'track' object.
  \item \code{copy_track} - Make a copy of the object.
  \item \code{plot} - 3D plot of the track using \code{plotly}.
  }
Always use \code{copy_track} to make a copy of the track object (e.g. \code{track2 = copy(track1)}),
or else filters will be applied to both objects.

Possible filters include:
\itemize{
  \item \code{\link{remove_outliers}} - Remove points that are far away from adjacent points.
  \item \code{\link{remove_stopped}} - Detect cloud of points and remove them from the track.
  \item \code{\link{distance_filter}} - Distance threshold filter.
  \item \code{\link{rolling_mean}} - Rolling mean filter.
  \item \code{\link{simplify_filter}} - Remove points using Douglas-Peuker Algorithm.
  \item \code{\link{interpolate_points}} - Interpolate points along track.
  \item \code{\link{fill_time_gaps}} - Create a point every second.
  }
}
\examples{
# Example with dummy track
data("simcoords")
track_dummy = create_track(simcoords) \%>\%  
    remove_outliers(n = 15, d = 4, select = "Dive1") \%>\%
    rolling_mean(n = 15) \%>\% 
    remove_stopped(n = 61, p = 0.0004, d = 6, t=35)
plot(track_dummy)

track_dummy2 = track_dummy2 \%>\% copy_track() \%>\% # use \code{copy_track} or else will also affect track_dummy
    distance_filter(d = 4)
plot(track_dummy2)
plot(track_dummy2, select = "Dive2")

write_track(track_dummy2, "track_clean.csv", digits = 2)
}
